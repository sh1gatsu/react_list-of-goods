{"version":3,"sources":["App.tsx","index.tsx"],"names":["SortType","goodsFromServer","App","state","isReversed","sortType","NONE","sortByAlphabet","setState","ALPABET","sortByLength","LENGTH","reverseSorting","resetSorting","this","resetButtonRules","alphabetButtonRules","lengthButtonRules","preparedGoods","goods","visibleGoods","sort","first","second","localeCompare","length","reverse","getReorderedGoods","className","type","classNames","onClick","map","good","React","Component","ReactDOM","render","document","getElementById"],"mappings":"iKAkBKA,E,wGAbQC,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,W,SAGGD,O,eAAAA,I,qBAAAA,I,oBAAAA,M,KAgDE,IAAME,EAAb,4MACEC,MAAQ,CACNC,YAAY,EACZC,SAAUL,EAASM,MAHvB,EAMEC,eAAiB,WACf,EAAKC,SAAS,CAAEH,SAAUL,EAASS,WAPvC,EAUEC,aAAe,WACb,EAAKF,SAAS,CAAEH,SAAUL,EAASW,UAXvC,EAcEC,eAAiB,WACf,EAAKJ,UAAS,SAAAL,GAAK,MAAK,CACtBC,YAAaD,EAAMC,gBAhBzB,EAoBES,aAAe,WACb,EAAKL,SAAS,CAAEH,SAAUL,EAASM,KAAMF,YAAY,KArBzD,4CAwBE,WACE,MAAiCU,KAAKX,MAA9BC,EAAR,EAAQA,WAAYC,EAApB,EAAoBA,SAEdU,EAAmBV,IAAaL,EAASM,MAAQF,EACjDY,EAAsBX,IAAaL,EAASS,QAC5CQ,EAAoBZ,IAAaL,EAASW,OAE1CO,EAnEH,SACLC,EADK,GAGJ,IADCd,EACF,EADEA,SAAUD,EACZ,EADYA,WAGNgB,EAAY,YAAOD,GAEzB,OAAQd,GACN,KAAML,EAASS,QACbW,EAAaC,MAAK,SAACC,EAAOC,GAAR,OAAmBD,EAAME,cAAcD,MACzD,MAGF,KAAMvB,EAASW,OACbS,EAAaC,MAAK,SAACC,EAAOC,GAAR,OAAmBD,EAAMG,OAASF,EAAOE,UAQ/D,OAAIrB,EACKgB,EAAaM,UAGfN,EAyCiBO,CACpB1B,EACA,CAAEI,WAAUD,eAGd,OACE,sBAAKwB,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,KAAK,SACLD,UAAWE,IACT,iBACA,CAAE,0BAA2Bd,IAE/Be,QAASjB,KAAKP,eANhB,iCAWA,wBACEsB,KAAK,SACLD,UAAWE,IACT,oBACA,CAAE,6BAA8Bb,IAElCc,QAASjB,KAAKJ,aANhB,4BAWA,wBACEmB,KAAK,SACLD,UAAWE,IACT,oBACA,CAAE,8BAA+B1B,IAEnC2B,QAASjB,KAAKF,eANhB,qBAWCG,GACC,wBACEc,KAAK,SACLD,UAAU,4BACVG,QAASjB,KAAKD,aAHhB,sBAUJ,6BACE,6BACGK,EAAcc,KAAI,SAAAC,GAAI,OACrB,oBAEE,UAAQ,OAFV,SAIGA,GAHIA,iBAvFrB,GAAyBC,IAAMC,WC/D/BC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.2c7b1024.chunk.js","sourcesContent":["import React from 'react';\nimport classNames from 'classnames';\nimport 'bulma/css/bulma.css';\nimport './App.scss';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nenum SortType {\n  NONE,\n  ALPABET,\n  LENGTH,\n}\n\ntype ReorderOptions = {\n  sortType: SortType,\n  isReversed: boolean,\n};\n\n// Use this function in the render to prepare goods\nexport function getReorderedGoods(\n  goods: string[],\n  { sortType, isReversed }: ReorderOptions,\n) {\n  // To avoid the original array mutation\n  const visibleGoods = [...goods];\n\n  switch (sortType) {\n    case (SortType.ALPABET): {\n      visibleGoods.sort((first, second) => first.localeCompare(second));\n      break;\n    }\n\n    case (SortType.LENGTH): {\n      visibleGoods.sort((first, second) => first.length - second.length);\n      break;\n    }\n\n    default:\n      break;\n  }\n\n  if (isReversed) {\n    return visibleGoods.reverse();\n  }\n\n  return visibleGoods;\n}\n\n// DON'T save goods to the state\n\ntype State = {\n  isReversed: boolean,\n  sortType: SortType,\n};\n\nexport class App extends React.Component<{}, State> {\n  state = {\n    isReversed: false,\n    sortType: SortType.NONE,\n  };\n\n  sortByAlphabet = () => {\n    this.setState({ sortType: SortType.ALPABET });\n  };\n\n  sortByLength = () => {\n    this.setState({ sortType: SortType.LENGTH });\n  };\n\n  reverseSorting = () => {\n    this.setState(state => ({\n      isReversed: !state.isReversed,\n    }));\n  };\n\n  resetSorting = () => {\n    this.setState({ sortType: SortType.NONE, isReversed: false });\n  };\n\n  render() {\n    const { isReversed, sortType } = this.state;\n\n    const resetButtonRules = sortType !== SortType.NONE || isReversed;\n    const alphabetButtonRules = sortType !== SortType.ALPABET;\n    const lengthButtonRules = sortType !== SortType.LENGTH;\n\n    const preparedGoods = getReorderedGoods(\n      goodsFromServer,\n      { sortType, isReversed },\n    );\n\n    return (\n      <div className=\"section content\">\n        <div className=\"buttons\">\n          <button\n            type=\"button\"\n            className={classNames(\n              'button is-info',\n              { 'button is-info is-light': alphabetButtonRules },\n            )}\n            onClick={this.sortByAlphabet}\n          >\n            Sort alphabetically\n          </button>\n\n          <button\n            type=\"button\"\n            className={classNames(\n              'button is-success',\n              { 'button is-success is-light': lengthButtonRules },\n            )}\n            onClick={this.sortByLength}\n          >\n            Sort by length\n          </button>\n\n          <button\n            type=\"button\"\n            className={classNames(\n              'button is-warning',\n              { 'button is-warning is-light': !isReversed },\n            )}\n            onClick={this.reverseSorting}\n          >\n            Reverse\n          </button>\n\n          {resetButtonRules && (\n            <button\n              type=\"button\"\n              className=\"button is-danger is-light\"\n              onClick={this.resetSorting}\n            >\n              Reset\n            </button>\n          )}\n        </div>\n\n        <ul>\n          <ul>\n            {preparedGoods.map(good => (\n              <li\n                key={good}\n                data-cy=\"Good\"\n              >\n                {good}\n              </li>\n            ))}\n          </ul>\n        </ul>\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}